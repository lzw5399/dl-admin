pool:
  vmImage: 'ubuntu-latest'

trigger:
  branches:
    include:
      - master
  paths:
    exclude:
      - dl-vue-admin/*
      - .dockerignore
      - .gitignore
      - README.md

variables:
  - group: dl-api-config # 引用配置的变量组

  - name: workingDirectory
    value: dl-api-csharp

  - name: buildConfiguration
    value: Release

steps:
  - task: PowerShell@2
    inputs:
      targetType: filePath
      filePath: $(workingDirectory)/transform_settings.ps1
      workingDirectory: $(workingDirectory)
    env:
      cos_appId: $(cos_appId)
      cos_secretId: $(cos_secretId)
      cos_secretKey: $(cos_secretKey)
      cos_bucket: $(cos_bucket)
      cos_region: $(cos_region)
      cos_durationSecond: $(cos_durationSecond)
      cos_baseUrl: $(cos_baseUrl)
      sentryClientKey: $(sentryClientKey)
      conn_dl: $(conn_dl)
      jwt_key: $(jwt_key)
      jwt_issuer: $(jwt_issuer)
      jwt_audience: $(jwt_audience)
      jwt_expireMinutes: $(jwt_expireMinutes)
      cache_enable: $(cache_enable)
      cache_redisconn: $(cache_redisconn)
      cache_defaultExpireMinutes: $(cache_defaultExpireMinutes)
    displayName: 'transform settings'

  - task: DotNetCoreCLI@2
    inputs:
      command: 'restore'
      projects: '**/*.csproj'
    displayName: 'dotnet restore'

  - task: DotNetCoreCLI@2
    inputs:
      command: 'build'
      projects: '**/*.csproj'
      arguments: '--configuration $(buildConfiguration)'
    displayName: 'dotnet build'

  - task: DotNetCoreCLI@2
    inputs:
      command: publish
      projects: '**/Doublelives.Api.csproj'
      arguments: '--configuration $(buildConfiguration)'
      zipAfterPublish: false
      modifyOutputPath: false
    displayName: 'dotnet publish'

  - task: CopyFiles@2
    inputs:
      SourceFolder: '$(workingDirectory)/Doublelives.Api/bin/$(buildConfiguration)/netcoreapp3.1/publish'
      TargetFolder: '$(build.artifactstagingdirectory)/publish'
    displayName: 'Copy publish folder'

  - task: CopyFiles@2
    inputs:
      SourceFolder: '$(workingDirectory)'
      Contents: Dockerfile
      TargetFolder: '$(build.artifactstagingdirectory)'
    displayName: 'Copy Dockerfile'

  - task: CopyFiles@2
    inputs:
      SourceFolder: '$(workingDirectory)'
      Contents: docker-compose.yml
      TargetFolder: '$(build.artifactstagingdirectory)'
    displayName: 'Copy docker-compose.yml'

  - task: CopyFiles@2
    inputs:
      Contents: deploy.sh
      TargetFolder: '$(build.artifactstagingdirectory)'
    displayName: 'Copy deploy.sh'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(build.artifactstagingdirectory)'
    displayName: 'Publish temp files'